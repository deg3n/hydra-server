name: Build and Push Docker Image

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up QEMU for multi-arch builds
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push' || github.event_name == 'release'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate tags
        id: tags
        run: |
          TAGS="ghcr.io/${{ github.repository }}:latest"
          if [ "${{ github.ref }}" = "refs/heads/main" ]; then
            TAGS="$TAGS,ghcr.io/${{ github.repository }}:main"
          fi
          if [ "${{ github.event_name }}" = "release" ]; then
            TAGS="$TAGS,ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}"
          fi
          echo "tags=$TAGS" >> $GITHUB_OUTPUT

      - name: Build and push multi-arch Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' || github.event_name == 'release' }}
          tags: ${{ steps.tags.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.html_url }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
            
      - name: Log out from GitHub Container Registry
        if: always() && (github.event_name == 'push' || github.event_name == 'release')
        run: docker logout ghcr.io
